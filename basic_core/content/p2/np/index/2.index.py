# Indexing a 2D array (matrices)
# The general format is arr_2d[row][col] or arr_2d[row,col]
import numpy as np
arr_2d = np.array(([1, 2, 3],[2,3,4],[9,10,11]))
# print(arr_2d)
# [[ 1  2  3]
#  [ 2  3  4]
#  [ 9 10 11]]

#Indexing row
# print(arr_2d[0]) # [1 2 3]
# # or 
# print(arr_2d[0,:]) # # [1 2 3]

# Getting individual element value
# print(arr_2d[1][1]) # 3
# print(arr_2d[1,2]) # 4

# 2D array slicing
# [:2]：表示对第一维度（行）进行切片，从索引 0 到 1（不包括 2），即选择前两行。
# [1:]：表示对第二维度（列）进行切片，从索引 1 开始到数组末尾，即选择从第二列到最后一列。
# print(arr_2d[:2,1:])
# [[2 3]
#  [3 4]]


# Fancy Indexing 花哨的索引允许您无序地选择整个行或列
arr2d = np.zeros((10,10))
# print(arr2d)
# [[0. 0. 0. 0. 0. 0. 0. 0. 0. 0.]
#  [0. 0. 0. 0. 0. 0. 0. 0. 0. 0.]
#  [0. 0. 0. 0. 0. 0. 0. 0. 0. 0.]
#  [0. 0. 0. 0. 0. 0. 0. 0. 0. 0.]
#  [0. 0. 0. 0. 0. 0. 0. 0. 0. 0.]
#  [0. 0. 0. 0. 0. 0. 0. 0. 0. 0.]
#  [0. 0. 0. 0. 0. 0. 0. 0. 0. 0.]
#  [0. 0. 0. 0. 0. 0. 0. 0. 0. 0.]
#  [0. 0. 0. 0. 0. 0. 0. 0. 0. 0.]
#  [0. 0. 0. 0. 0. 0. 0. 0. 0. 0.]]

#Length of array
arr_length = arr2d.shape[1]
print(arr_length)

#Set up array
for i in range(arr_length):
    arr2d[i] = i 
# print(arr2d)
# [[0. 0. 0. 0. 0. 0. 0. 0. 0. 0.]
#  [1. 1. 1. 1. 1. 1. 1. 1. 1. 1.]
#  [2. 2. 2. 2. 2. 2. 2. 2. 2. 2.]
#  [3. 3. 3. 3. 3. 3. 3. 3. 3. 3.]
#  [4. 4. 4. 4. 4. 4. 4. 4. 4. 4.]
#  [5. 5. 5. 5. 5. 5. 5. 5. 5. 5.]
#  [6. 6. 6. 6. 6. 6. 6. 6. 6. 6.]
#  [7. 7. 7. 7. 7. 7. 7. 7. 7. 7.]
#  [8. 8. 8. 8. 8. 8. 8. 8. 8. 8.]
#  [9. 9. 9. 9. 9. 9. 9. 9. 9. 9.]]

# print(arr2d[[2,4,6,8]])
# [[2. 2. 2. 2. 2. 2. 2. 2. 2. 2.]
#  [4. 4. 4. 4. 4. 4. 4. 4. 4. 4.]
#  [6. 6. 6. 6. 6. 6. 6. 6. 6. 6.]
#  [8. 8. 8. 8. 8. 8. 8. 8. 8. 8.]]

#Allows in any order
print(arr2d[[6,4,2,7]])
# [[6. 6. 6. 6. 6. 6. 6. 6. 6. 6.]
#  [4. 4. 4. 4. 4. 4. 4. 4. 4. 4.]
#  [2. 2. 2. 2. 2. 2. 2. 2. 2. 2.]
#  [7. 7. 7. 7. 7. 7. 7. 7. 7. 7.]]